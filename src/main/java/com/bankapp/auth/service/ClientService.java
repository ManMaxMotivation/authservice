package com.bankapp.auth.service;

// –ò–º–ø–æ—Ä—Ç—ã –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –∫–ª–∞—Å—Å–æ–≤
import com.bankapp.auth.model.Client; // –ú–æ–¥–µ–ª—å –∫–ª–∏–µ–Ω—Ç–∞, –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è—é—â–∞—è —Å—É—â–Ω–æ—Å—Ç—å –≤ –ë–î
import com.bankapp.auth.repository.ClientRepository; // –†–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å —Ç–∞–±–ª–∏—Ü–µ–π clients –≤ PostgreSQL
import org.springframework.beans.factory.annotation.Autowired; // –ê–Ω–Ω–æ—Ç–∞—Ü–∏—è –¥–ª—è –≤–Ω–µ–¥—Ä–µ–Ω–∏—è –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
import org.springframework.stereotype.Service; // –ê–Ω–Ω–æ—Ç–∞—Ü–∏—è –¥–ª—è –æ–±–æ–∑–Ω–∞—á–µ–Ω–∏—è —Å–µ—Ä–≤–∏—Å–Ω–æ–≥–æ —Å–ª–æ—è
import java.util.Optional; // –ö–ª–∞—Å—Å –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ–π –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ –º–æ–≥—É—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º–∏

// üí• @Service —É–∫–∞–∑—ã–≤–∞–µ—Ç, —á—Ç–æ —ç—Ç–æ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç —Å–µ—Ä–≤–∏—Å–Ω–æ–≥–æ —Å–ª–æ—è Spring
// Spring –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å–æ–∑–¥–∞–µ—Ç –±–∏–Ω —ç—Ç–æ–≥–æ –∫–ª–∞—Å—Å–∞ –∏ —É–ø—Ä–∞–≤–ª—è–µ—Ç –µ–≥–æ –∂–∏–∑–Ω–µ–Ω–Ω—ã–º —Ü–∏–∫–ª–æ–º
@Service
public class ClientService {

    // –ó–∞–≤–∏—Å–∏–º–æ—Å—Ç—å –æ—Ç —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –∫–ª–∏–µ–Ω—Ç–∞–º–∏ –≤ –ë–î
    private final ClientRepository clientRepository;

    // üí• –ö–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä —Å –≤–Ω–µ–¥—Ä–µ–Ω–∏–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —á–µ—Ä–µ–∑ @Autowired
    // Spring –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç —Ä–µ–∞–ª–∏–∑–∞—Ü–∏—é ClientRepository
    @Autowired
    public ClientService(ClientRepository clientRepository) {
        this.clientRepository = clientRepository;
    }

    // üí• –ú–µ—Ç–æ–¥ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –Ω–æ–≤–æ–≥–æ –∫–ª–∏–µ–Ω—Ç–∞
    // –°–æ–∑–¥–∞–µ—Ç –Ω–æ–≤–æ–≥–æ –∫–ª–∏–µ–Ω—Ç–∞ –∏ —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç –µ–≥–æ –≤ –ë–î
    public Client register(String fullName, String phone, String username, String password) {
        // –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π –æ–±—ä–µ–∫—Ç Client —Å –ø–µ—Ä–µ–¥–∞–Ω–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏
        Client client = new Client(fullName, phone, username, password);
        // üí• –°–æ—Ö—Ä–∞–Ω—è–µ–º –∫–ª–∏–µ–Ω—Ç–∞ –≤ –ë–î —á–µ—Ä–µ–∑ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π
        // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç SQL: INSERT INTO client (full_name, phone, username, password) VALUES (?, ?, ?, ?)
        // –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω–æ–≥–æ –∫–ª–∏–µ–Ω—Ç–∞ —Å —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã–º ID (—Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–º –ë–î)
        return clientRepository.save(client);
    }

    // üí• –ú–µ—Ç–æ–¥ –≤—Ö–æ–¥–∞ –ø–æ –ª–æ–≥–∏–Ω—É –∏ –ø–∞—Ä–æ–ª—é
    // –ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ –∫–ª–∏–µ–Ω—Ç–∞ —Å —É–∫–∞–∑–∞–Ω–Ω—ã–º –ª–æ–≥–∏–Ω–æ–º –∏ –ø–∞—Ä–æ–ª–µ–º
    public Optional<Client> login(String username, String password) {
        // üí• –ò—â–µ–º –∫–ª–∏–µ–Ω—Ç–∞ –ø–æ –ª–æ–≥–∏–Ω—É —á–µ—Ä–µ–∑ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π
        // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç SQL: SELECT * FROM client WHERE username = ?
        // –ó–∞—Ç–µ–º –ø—Ä–æ–≤–µ—Ä—è–µ–º, —Å–æ–≤–ø–∞–¥–∞–µ—Ç –ª–∏ –ø–∞—Ä–æ–ª—å
        return clientRepository.findByUsername(username)
                .filter(client -> client.getPassword().equals(password));
    }

    // üí• –ú–µ—Ç–æ–¥ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è –∫–ª–∏–µ–Ω—Ç–∞ –ø–æ –Ω–æ–º–µ—Ä—É —Ç–µ–ª–µ—Ñ–æ–Ω–∞
    // –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∏—è –¥—É–±–ª–∏–∫–∞—Ç–æ–≤ –ø—Ä–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
    public boolean existsByPhone(String phone) {
        // üí• –í—ã–∑—ã–≤–∞–µ–º –º–µ—Ç–æ–¥ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏
        // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç SQL: SELECT EXISTS (SELECT 1 FROM client WHERE phone = ?)
        return clientRepository.existsByPhone(phone);
    }
}